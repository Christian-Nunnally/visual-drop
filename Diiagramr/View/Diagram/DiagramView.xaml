<UserControl x:Class="Diiagramr.View.Diagram.DiagramView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:diagram="clr-namespace:Diiagramr.ViewModel.Diagram"
             xmlns:view="clr-namespace:Diiagramr.View"
             xmlns:customControls="clr-namespace:Diiagramr.View.CustomControls"
             xmlns:pluginNodeApi="clr-namespace:Diiagramr.PluginNodeApi"
             d:DataContext="{d:DesignInstance diagram:DiagramViewModel}"
             DragOver="{s:Action DragOver}"
             DragEnter="{s:Action DragEnter}"
             DragLeave="{s:Action DragLeave}"
             MouseMove="{s:Action MouseMoveHandler}"
             Drop="{s:Action DroppedDiagramCallNode}"
             AllowDrop="True"
             d:DesignHeight="300"
             d:DesignWidth="600"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type Rectangle}" x:Key="NodeBorderRectangleStyle">
            <Setter Property="Fill" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.01" Storyboard.TargetProperty="Fill.Color" To="LightGray" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.6" Storyboard.TargetProperty="Fill.Color" To="Transparent" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type customControls:NodeMoveThumb}">
            <Rectangle Style="{StaticResource NodeBorderRectangleStyle}"/>
        </ControlTemplate>

        <ItemsPanelTemplate x:Key="CanvasItemsPanelTemplate">
            <Canvas />
        </ItemsPanelTemplate>

        <Style x:Key="WireContainerStyle" TargetType="ContentPresenter">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NodeLabelStyle" TargetType="{x:Type Label}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding TitleVisible}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.25"
                                                Storyboard.TargetProperty="Foreground.Color"
                                                To="Transparent" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.05"
                                                Storyboard.TargetProperty="Foreground.Color"
                                                To="#F667" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TerminalContainerStyle" TargetType="ContentPresenter">
            <Setter Property="Canvas.Left" Value="{Binding XRelativeToNode, Mode=TwoWay}" />
            <Setter Property="Canvas.Top" Value="{Binding YRelativeToNode, Mode=TwoWay}" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleteNodeButtonStyle" TargetType="Button">
            <Setter Property="Content" Value=""/>
            <Setter Property="Background" Value="IndianRed"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="{x:Static view:DiagramConstants.NodeBorderWidth}"/>
            <Setter Property="Height" Value="{x:Static view:DiagramConstants.NodeBorderWidth}"/>
        </Style>

        <Style x:Key="SelectionStyle" TargetType="Rectangle">
            <Setter Property="Fill" Value="DodgerBlue"/>
            <Setter Property="Margin" Value="{x:Static view:DiagramConstants.NodeSelectionBorderThickness}"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style>

        <Style x:Key="NodeBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="{Binding Width}"/>
            <Setter Property="Height" Value="{Binding Height}"/>
            <Setter Property="Margin" Value="{x:Static view:DiagramConstants.NodeBorderThickness}"/>
        </Style>

        <BooleanToVisibilityConverter x:Key="Btv" />
    </UserControl.Resources>

    <Grid>
        <customControls:ZoomBorder PanX="{Binding PanX, Mode=OneWayToSource}"
                                   PanY="{Binding PanY, Mode=OneWayToSource}" 
                                   Zoom="{Binding Zoom, Mode=OneWayToSource}"
                                   Background="White" 
                                   HorizontalAlignment="Stretch" 
                                   VerticalAlignment="Stretch"
                                   PreviewMouseLeftButtonDown="{s:Action PreviewLeftMouseButtonDownHandler}"
                                   PreviewMouseRightButtonDown="{s:Action PreviewRightMouseButtonDownHandler}"
                                   MouseLeftButtonDown="{s:Action LeftMouseButtonDownHandler}">
            <Grid>
                <!-- Wire Items Control -->
                <ItemsControl ItemsSource="{Binding WireViewModels}"
                              ItemsPanel="{StaticResource CanvasItemsPanelTemplate}"
                              ItemContainerStyle="{StaticResource WireContainerStyle}"/>
                <!-- Node Items Control-->
                <ItemsControl ItemsSource="{Binding NodeViewModels}"
                              ItemsPanel="{StaticResource CanvasItemsPanelTemplate}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type pluginNodeApi:PluginNode}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition MaxWidth="{x:Static view:DiagramConstants.NodeBorderWidth}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{x:Static view:DiagramConstants.NodeBorderWidth}" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <Label Content="{Binding Name}"
                                                   Style="{StaticResource NodeLabelStyle}"
                                                   Foreground="LightSlateGray" 
                                                   FontFamily="Verdana" 
                                                   FontSize="3"
                                                   Grid.RowSpan="2" 
                                                   HorizontalContentAlignment="Center" 
                                                   IsHitTestVisible="False"
                                                   RenderTransformOrigin="0.5, 0">
                                                <Label.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="5" ScaleY="5"></ScaleTransform>
                                                        <TranslateTransform X="5" Y="-44"/>
                                                    </TransformGroup>
                                                </Label.RenderTransform>
                                            </Label>

                                            <customControls:NodeMoveThumb Grid.Row="0"
                                                                          Grid.Column="0"
                                                                          Grid.ColumnSpan="2"
                                                                          Grid.RowSpan="2"
                                                                          DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                          PreviewMouseDown="{s:Action PreviewLeftMouseDownOnBorder}"
                                                                          Template="{StaticResource MoveThumbTemplate}"
                                                                          MouseEnter="{s:Action MouseEntered}"  
                                                                          Drop="{s:Action DropEventHandler}"
                                                                          MouseLeave="{s:Action MouseLeft}"         
                                                                          AllowDrop="True"
                                                                          Cursor="SizeAll"/>

                                            <ItemsControl Grid.Row="0" 
                                                          Grid.Column="0"
                                                          Grid.ColumnSpan="2"
                                                          Grid.RowSpan="2"
                                                          ItemsSource="{Binding TerminalViewModels}"
                                                          ItemContainerStyle="{StaticResource TerminalContainerStyle}"
                                                          ItemsPanel="{StaticResource CanvasItemsPanelTemplate}"/>

                                            <Rectangle Grid.Row="0"
                                                       Grid.Column="0"
                                                       Grid.ColumnSpan="2"
                                                       Grid.RowSpan="2"
                                                       Style="{StaticResource SelectionStyle}"
                                                       Visibility="{Binding IsSelected, Converter={StaticResource Btv}}"/>

                                            <Border Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.RowSpan="2"
                                                    Grid.ColumnSpan="2"
                                                    HorizontalAlignment="Stretch"
                                                    Style="{StaticResource NodeBorderStyle}">
                                                <ContentControl s:View.Model="{Binding}"
                                                                VerticalContentAlignment="Stretch"
                                                                HorizontalContentAlignment="Stretch"
                                                                IsTabStop="False" />
                                            </Border>
                                            <Button Grid.Row="0"
                                                    Grid.Column="1"
                                                    Style="{StaticResource DeleteNodeButtonStyle}"
                                                    Command="{s:Action RemoveNodePressed}"
                                                    Visibility="{Binding IsSelected, Converter={StaticResource Btv}}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </customControls:ZoomBorder>

        <ContentControl s:View.Model="{Binding DiagramControlViewModel}" HorizontalAlignment="Right" VerticalAlignment="Top"/>

        <Border Background="#BBFFFFFF"
                Visibility="{Binding IsDraggingDiagramCallNode, Converter={StaticResource Btv}}">
            <Grid HorizontalAlignment="Center" 
                  VerticalAlignment="Center" 
                  Width="300" 
                  Height="100"
                  IsHitTestVisible="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="57*"/>
                    <RowDefinition Height="43*"/>
                </Grid.RowDefinitions>
                <Polygon Points="20 0,25 0, 25 20, 45, 20, 45 25, 25 25, 25 45, 20 45, 20 25, 0 25, 0 25, 0, 20, 20 20" 
                         Fill="Green" 
                         HorizontalAlignment="Center" 
                         VerticalAlignment="Center" 
                         Grid.Row="0"/>
                <Label Grid.Row="1"
                       Content="{Binding DropDiagramCallText}"
                       HorizontalContentAlignment="Center"
                       FontSize="18"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>